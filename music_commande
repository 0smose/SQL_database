getting all albums : SELECT * FROM albums;
Récupérer tous les albums dont le titre contient "Great" (indice) : SELECT * FROM albums WHERE title LIKE  '%Great%';
Donner le nombre total d'albums contenus dans la base (sans regarder les id bien sûr) : SELECT COUNT(AlbumId) FROM Albums;
Supprimer tous les albums dont le nom contient "music" : DELETE FROM albums WHERE Title LIKE '%music%';
Récupérer tous les albums écrits par AC/DC : SELECT * FROM albums  WHERE ArtistId = 1;
Récupérer tous les titres des albums de AC/DC : SELECT * FROM tracks  WHERE AlbumId = 1 or AlbumId = 4;
Récupérer la liste des titres de l'album "Let There Be Rock" : SELECT * FROM tracks  WHERE AlbumId = 4;
Afficher le prix de cet album ainsi que sa durée totale : SELECT SUM(UnitPrice) FROM tracks WHERE AlbumId = 4 ; SELECT SUM(Milliseconds) FROM tracks WHERE AlbumId = 4 ;
Afficher le coût de l'intégralité de la discographie de "Deep Purple" : SELECT SUM(UnitPrice) FROM albums JOIN tracks ON tracks.AlbumId = albums.AlbumId WHERE albums.ArtistId = 58 ; prix : 91.0799999999999
Créer l'album de ton artiste favori en base, en renseignant correctement les trois tables albums, artists et tracks : INSERT INTO artists (name) VALUES ('Flying Lotus'); INSERT INTO albums (Title, ArtistId) VALUES ('Reset EP', 276); INSERT INTO tracks (Name, AlbumId, MediaTypeId, GenreId, Milliseconds, UnitPrice) VALUES ('Tea Leaf Dancers', 348, 1, 15, 123456, 1.99), ('Vegas Collie', 348, 1, 15, 123456, 1.99), ('Massage Situation', 348, 1, 15, 123456, 1.99), ('Spicy Samnwich', 348, 1, 15, 123456, 1.99), ('Bonus Beat', 348, 1, 15, 123456, 0.99), ('Dance Floor Stalker', 348, 1, 15, 123456, 1.25);











